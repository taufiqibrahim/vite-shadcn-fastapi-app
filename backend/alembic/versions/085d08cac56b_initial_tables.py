"""Initial tables

Revision ID: 085d08cac56b
Revises:
Create Date: 2025-04-11 15:21:07.031265

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "085d08cac56b"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "account",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uid", sa.Uuid(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("disabled", sa.Boolean(), nullable=False),
        sa.Column("account_type", sa.Enum("USER", "SERVICE_ACCOUNT", name="accounttype"), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_account_email"), "account", ["email"], unique=True)
    op.create_index(op.f("ix_account_id"), "account", ["id"], unique=False)
    op.create_index(op.f("ix_account_uid"), "account", ["uid"], unique=True)
    op.create_table(
        "apikey",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("key", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("uid", sa.Uuid(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("level", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["account.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_apikey_id"), "apikey", ["id"], unique=False)
    op.create_index(op.f("ix_apikey_key"), "apikey", ["key"], unique=True)
    op.create_index(op.f("ix_apikey_uid"), "apikey", ["uid"], unique=True)
    op.create_table(
        "userprofile",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uid", sa.Uuid(), nullable=False),
        sa.Column("full_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["account.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_userprofile_id"), "userprofile", ["id"], unique=False)
    op.create_index(op.f("ix_userprofile_uid"), "userprofile", ["uid"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_userprofile_uid"), table_name="userprofile")
    op.drop_index(op.f("ix_userprofile_id"), table_name="userprofile")
    op.drop_table("userprofile")
    op.drop_index(op.f("ix_apikey_uid"), table_name="apikey")
    op.drop_index(op.f("ix_apikey_key"), table_name="apikey")
    op.drop_index(op.f("ix_apikey_id"), table_name="apikey")
    op.drop_table("apikey")
    op.drop_index(op.f("ix_account_uid"), table_name="account")
    op.drop_index(op.f("ix_account_id"), table_name="account")
    op.drop_index(op.f("ix_account_email"), table_name="account")
    op.drop_table("account")
    # ### end Alembic commands ###
